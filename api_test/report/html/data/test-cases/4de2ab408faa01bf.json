{
  "uid" : "4de2ab408faa01bf",
  "name" : "test_xfail_not_run",
  "fullName" : "case.login_box.test_mark.TestMarks#test_xfail_not_run",
  "historyId" : "d6f7c74b13aa27483f275c2cee8de3ce",
  "time" : {
    "start" : 1610594034984,
    "stop" : 1610594034984,
    "duration" : 0
  },
  "description" : "\n        run=False表示这条用例不用执行\n        ",
  "descriptionHtml" : "<pre><code>    run=False表示这条用例不用执行\n</code></pre>\n",
  "status" : "skipped",
  "statusMessage" : "_pytest.outcomes.XFailed: [NOTRUN]",
  "statusTrace" : "cls = _pytest.runner.CallInfo, func = <function call_runtest_hook.<locals>.<lambda> at 0x0000017085EE8F28>, when = 'setup', reraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: \"Callable[[], TResult]\",\n        when: \"Literal['collect', 'setup', 'call', 'teardown']\",\n        reraise: \"Optional[Union[Type[BaseException], Tuple[Type[BaseException], ...]]]\" = None,\n    ) -> \"CallInfo[TResult]\":\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result = func()  # type: Optional[TResult]\n\nvenv\\lib\\site-packages\\_pytest\\runner.py:310: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvenv\\lib\\site-packages\\_pytest\\runner.py:256: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\nvenv\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\nvenv\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\nvenv\\lib\\site-packages\\pluggy\\manager.py:87: in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nitem = <Function test_xfail_not_run>\n\n    @hookimpl(tryfirst=True)\n    def pytest_runtest_setup(item: Item) -> None:\n        skipped = evaluate_skip_marks(item)\n        item._store[skipped_by_mark_key] = skipped is not None\n        if skipped:\n            skip(skipped.reason)\n    \n        item._store[xfailed_key] = xfailed = evaluate_xfail_marks(item)\n        if xfailed and not item.config.option.runxfail and not xfailed.run:\n>           xfail(\"[NOTRUN] \" + xfailed.reason)\nE           _pytest.outcomes.XFailed: [NOTRUN]\n\nvenv\\lib\\site-packages\\_pytest\\skipping.py:241: XFailed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "case.login_box"
  }, {
    "name" : "suite",
    "value" : "test_mark"
  }, {
    "name" : "subSuite",
    "value" : "TestMarks"
  }, {
    "name" : "host",
    "value" : "DESKTOP-BSEPO77"
  }, {
    "name" : "thread",
    "value" : "124912-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "case.login_box.test_mark"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "4de2ab408faa01bf.json",
  "parameterValues" : [ ]
}